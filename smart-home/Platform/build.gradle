plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.15.0'
    id("org.sonarqube") version "4.4.1.3373"
}

group 'Tartan'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'tartan.smarthome.TartanHomeApplication'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // JAX-B dependencies for JDK 9+
    implementation "javax.xml.bind:jaxb-api:2.2.11"
    implementation "com.sun.xml.bind:jaxb-core:2.2.11"
    implementation "com.sun.xml.bind:jaxb-impl:2.2.11"
    implementation "javax.activation:activation:1.1.1"
    implementation 'io.dropwizard:dropwizard-bom:1.0.0'
    implementation 'io.dropwizard:dropwizard-core:1.0.0'
    implementation 'io.dropwizard:dropwizard-views-freemarker:1.0.0'
    implementation 'io.dropwizard:dropwizard-auth:1.0.0'
    implementation 'io.dropwizard:dropwizard-hibernate:1.0.0'
    implementation 'io.dropwizard:dropwizard-assets:0.9.1'
    implementation 'mysql:mysql-connector-java:8.0.13'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

run {
    args = ['server', 'config.yml']
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Implementation-Title': rootProject.name
        attributes 'Implementation-Version': rootProject.version
        attributes 'Implementation-Vendor-Id': rootProject.group
        attributes 'Created-By': 'Gradle ' + gradle.gradleVersion
        attributes 'Main-Class': mainClassName
    }
    archiveName rootProject.name + '-' + rootProject.version + '.jar'
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('jacocoReports')
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // jacoco report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, includes: ['tartan/smarthome/resources/StaticTartanStateEvaluator.class'])
        }))
    }
}

pitest {
    //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
    junit5PluginVersion = '1.1.1'
    targetClasses=['**tartan.smarthome.resources.StaticTartanStateEvaluator**']
    targetTests=[
            '**tartan.smarthome.resources.StaticStateEvaluatorSmartLockTests**',
            '**tartan.smarthome.resources.StaticStateEvaluatorAlarmTests**',
            '**tartan.smarthome.resources.StaticStateEvaluatorHeaterTests**',
            '**tartan.smarthome.resources.StaticStateEvaluatorR3VacantDoorTests**',
            '**tartan.smarthome.resources.StaticStateEvaluatorTartanHomeTests**',
            '**tartan.smarthome.resources.StaticStateEvaluatorVacantLightsTests**'
    ]
    outputFormats = ['HTML']
    timestampedReports = true
}

sonar {
    properties {
        property("sonar.projectKey", "402Monday3")
        property("sonar.gradle.skipCompile", true)
        property("sonar.host.url", "http://localhost:9000")
        property "sonar.token", "sqp_72c8c216f5d6037f2d067d8fa8ad6ce06ac42884"
    }
}