name: Java CI with Gradle

on:
  push:
    branches: # run this whenever pushed to main branch
      - main
      - white_box_tests
      - smart_door
      - self-host
  pull_request:
    branches:
      - main
      - smart_door

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2 #checks out main branch and puts into virtual machine

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Build with gradle!
        working-directory: smart-home/Platform
        run: | # "piping", running two commands right after the other
          chmod +x gradlew
          ./gradlew build -x test
      - name: Run tests!!!
        working-directory: smart-home/Platform
        run: | 
          chmod +x gradlew
          ./gradlew test

      - name: generate jacoco report
        working-directory: smart-home/Platform
        run: |
          chmod +x gradlew 
          ./gradlew jacocoTestReport

      - name: Generate jacoco badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: smart-home/Platform/build/jacocoReports/test/jacocoTestReport.csv

      - name: Commit and push the badge (if it changed)
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Commit Coverage Badge'
          add: '*.svg'

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: build/reports/jacoco

  deploy:
    needs: build-and-test
    runs-on: self-hosted  # test
    steps:
      - uses: actions/checkout@v1

      - name: Copy repo to cloud
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          port: ${{secrets.PORT}}
          key: ${{secrets.KEY}}
          source: "./"
          target: "~/prod"

      - name: Restart All Instances on Cloud
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.KEY}}
          port: ${{secrets.PORT}}
          script: |
            cd ~/prod/smart-home
            docker compose down && docker compose up --build -d
